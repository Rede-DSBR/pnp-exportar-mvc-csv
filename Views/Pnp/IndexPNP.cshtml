
@using QueryTool
@using System.Collections


 @model IndexViewModel;

  <link href="https://cdn.jsdelivr.net/npm/&#64;mdi/font&#64;4.x/css/materialdesignicons.min.css" rel="stylesheet">

@{
    ViewData["Title"] = "Home Page";
    
  //  @Model.teste

   
   


        List<SelectListItem> listaDimensao = PopulateDimensoes();
        List<SelectListItem> listaFatos = PopulateFatos(); 
        List<SelectListItem> listaAnos = PopulateAnosPNP(); 
}
@{
    ViewData["Title"] = "Home Page";



}

 <nav class="nav_sidebar ">


            <div class="menu-items">
                <ul class="nav-links">
                    <!-- Dados acâdemicos-->

                    <li>
                        <embed type="image/svg+xml" src="~/assets/network.svg" />

                        <a href="#">
                            <span class="link-name">Início</span>
                        </a>
                    </li>

                    <li>
                        <embed type="image/svg+xml" src="~/assets/home.svg" />

                        <a href="#">
                            <span class="link-name">Rede Federal EPCT</span>
                        </a>

                    </li>

                    <li class="selected">
                        <embed type="image/svg+xml" src="~/assets/graph.svg" />

                        <a href="#">
                            <span class="link-name">Indiadores de gestão</span>
                        </a>

                    </li>

                    <li>
                        <embed id="money" type="image/svg+xml" src="~/assets/money.svg" />

                        <a href="#">
                            <span class="link-name">Dados orçamentários</span>
                        </a>
                    </li>
                    <li>
                        <embed  type="image/svg+xml" src="~/assets/management.svg" />

                        <a href="#">
                            <span class="link-name">Dados de gestão pessoal</span>
                        </a>
                    </li>

                </ul>
            </div>
        </nav>

        <section class="dashboard">
            <div class="alert">
                <embed  type="image/svg+xml" src="~/assets/check.svg" />
                  CSV Gerado com Sucesso!!! Total de Registros=6955 
            </div>
            <div class="content">
                 <nav>
        <div class="container-scroller" id="container">
          <li tabindex="0" class="chip-selected">🎓 Dados Acadêmicos 
            <ul>
              <li> Curso, matricula e oferta</li>
              <li> Classificação racial, renda e sexo</li>
              <li>Situação Matricula</li>
            </ul>
            
          </li>
          <li  tabindex="0"> 🗒️ Percentuais Legais

            <ul>
              <li> teste</li>
              <li> Imagens</li>
              <li> teste</li>
            </ul>
          
          </li>
          <li  tabindex="0"> 🎓 Indicadores Acadêmicos

            <ul>
              <li> teste</li>
              <li> Imagens</li>
              <li> teste</li>
            </ul>
          
          </li>
        </div>

      </nav>                       
            </div>
            
             <a href="/PnpQuery?Ano=2021&query=queryDadosGerais.dax&titulo=Dados Acadêmicos;Curso, matrícula e oferta"
                                        title="Curso, matrícula e oferta">Curso, matrícula e oferta</a>


 

<div class="text-center">
                            <h1 class="display-5">Módulo de Exportação de Dados da PNP</h1>
                            <p></a>.</p>
                            </div>

<form asp-page-handler="Index" onsubmit="Form.submit(event)" id="entradaDados" method="GET">
  <h5 >Selecione os Anos da PNP</h5>

    <table style="tablecheckbox" >
    <tr>
      
        

        <tr>
        <td style="vertical-align:top"  WIDTH=50%>          
                                    @{
                                              
                                            int i=0;
                                            @foreach (var item in listaAnos){
                                                Console.Write("entre");
                                                Boolean chave =true;


                                               

                                                      for (int x=0;x<Model.Tabela.Ano.Length;x++){
                                                          if (Model.Tabela.Ano[x].Trim().Equals(@item.Value)){
                                                               <input id="A" type="checkbox" name="Ano" value="@item.Value" checked=true/>
                                                                @item.Text
                                                          chave=false;
                                                      
                                                      }
                                                      }

                                                    
                                                    if (chave){
                                                        <input id="A" type="checkbox" name="Ano" value="@item.Value" checked="@item.Selected"/>

                                                   
                                                      @item.Text

                                                    }

                                                   
                                                      
                                                      i++;
                                                        

                                                    
                                              }                                   
                                       }
                                        
                                        
                                    </div>

        </td>

        </tr>
        <tr>
        <td style="vertical-align:top"  WIDTH=50%>
           <p></p>
        </td>
        </tr>
        </table>
        <input type="hidden" id="fname" name="titulo" value="@ViewBag.Titulo;@ViewBag.subTitulo">
       
      
        <button value="@ViewBag.query" color="#2ecc71" dark type="submit" name="query"  asp-page-handler="Submit">Processar</button>
        
         <a href="@ViewBag.Arquivo" class="button download" download="pnp_academicosPNP.txt" target="_blank">
                Download CSV
              </a>
              <a href="@ViewBag.Dicionario" class="button download" download="dicionarioPNP.pdf" target="_blank">
                Download Dicionário de Dados
              </a> 
         <!--
         <button id="button1" type="submit"  class="btnd process" name="query" value=@ViewBag.query  asp-page-handler="Submit" >Processar CSV</button>
        -->
</form>
         <form asp-page-handler="PNP" method="Post">
            @if (Model.Tabela.Dimnesao != null)
            {
                
            

            @for (int i = 0; i < Model.Tabela.Dimnesao.Length; i++)
            {
                    <input type="hidden" id="D" type="checkbox" name="Dimensao" value="@Model.Tabela.Dimnesao[i]" checked="true" />
                                               //     Console.WriteLine(@Model.Tabela.Dimnesao[i]);
            } 
            }
             @if (Model.Tabela.Fato != null)
            {

             @for (int i = 0; i < Model.Tabela.Fato.Length; i++)
            {
                    <input type="hidden" id="F" type="checkbox" name="Fato" value="@Model.Tabela.Fato[i]" checked="true" />
                                               //     Console.WriteLine(@Model.Tabela.Dimnesao[i]);
            } 
            

              @for (int i = 0; i < Model.Tabela.Ano.Length; i++)
            {
                    <input type="hidden" id="A" type="checkbox" name="Ano" value="@Model.Tabela.Ano[i]" checked="true" />
                                               //     Console.WriteLine(@Model.Tabela.Dimnesao[i]);
            } 
            }
            
            
                                                

                                                 
                                                
                                                   

                                                
            
           <button id="button1" type="submit"  class="btn btn-success"  name="acao" value="csv" asp-page-handler="Submit" >Gera CSV</button>

        </form>
        @if(ViewBag.Arquivo !=null){

            Console.Write(ViewBag.Arquivo);

         <a href=@ViewBag.Arquivo download="pnp_academicosPNP.txt" title="Download CSV PNP" target="_blank">  Download CSV</a>
         
         <p></p>

         <a href=@ViewBag.Arquivo download="pnp_academicosPNP.txt" title="Dicionário de Dados" target="_blank">  Dicionário de Dados</a>
         }

<div id="app">
    <div class="text-center">
    
     <div>
       <v-card>
   
          <v-card-title class="justify-center">Modulo de exportaçao</v-card-title>
        
          <v-expansion-panels>
          
          </v-expansion-panels>
  
          
          <v-data-table
          :headers="headers"
          :items="desserts"
         
          :items-per-page="5"
          class="elevation-1"
        ></v-data-table>
                
      
        </v-card>
    </v-container>
          
       
    </div>
</div>
</v-app>
        <p></p>
      
    

<script src="https://cdn.jsdelivr.net/npm/vue@2.x/dist/vue.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.js"></script>


@{


      List<SelectListItem> PopulateAnosPNP()
    {
        List<SelectListItem> items = new List<SelectListItem>();
        AnosPNP anosPNP = new AnosPNP();

        
        foreach (var item in anosPNP.listaAnos)

        {
            //    dimensoes = dimensoes + "\'" + item.ToString().Trim().Replace("\'","")+"\',";

            items.Add(new SelectListItem
            {
                Text = item.ToString(),
                Value = item.ToString()
            });
        }


        //     itemsDimensao = items;
        //   Console.WriteLine(dimensoes);
        return items;
    }



      List<SelectListItem> PopulateDimensoes()
    {
        List<SelectListItem> items = new List<SelectListItem>();
        DimensaoPNP dimensaoPNP = new DimensaoPNP();

        ArrayList listaD = dimensaoPNP.listaDimensoes;
        foreach (var item in listaD)

        {
            //    dimensoes = dimensoes + "\'" + item.ToString().Trim().Replace("\'","")+"\',";

            items.Add(new SelectListItem
            {
                Text = item.ToString(),
                Value = item.ToString()
            });
        }


        //     itemsDimensao = items;
        //   Console.WriteLine(dimensoes);
        return items;
    }

     static List<SelectListItem> PopulateFatos()
    {
        List<SelectListItem> items = new List<SelectListItem>();
        FatosPNP fatosPNP = new FatosPNP();

        ArrayList listaF = fatosPNP.listaFatos;
        foreach (var item in listaF)

        {


            FatosValue fatosValue = (FatosValue)item;
            items.Add(new SelectListItem
            {
                Text = fatosValue.Text,
                Value = fatosValue.Value
            });
        }




        return items;
    }

}



<script type="text/javascript" charset="utf-8">
  let app = new Vue({
      el: '#app',
       vuetify: new Vuetify({

          icons: {
        iconFont: "md",
    },
       }),
    
    
    
   data: {  
    teste :['dudu'],
    selectedDim :[],
    selectedFact: ['John'],
    array: [],
    headers: [
       
        @Html.Raw(Model.Tabela.colunas)
 
        
        ],
        desserts: [
        @Html.Raw(Model.Tabela.linhas)
        
        ]
   
   
   },
   methods: {
    greet: function (event) {

         $.ajax({
            type: "GET",
            url: "./Search",
            data:  $("#query").val(),
            dataType: "json",
            success: OnSuccess,
            failure: function (response) {
                alert(response.d);
            }
        });
     
     
    }
   
   }
  }
  )

    
function setHourglass()
 {
   document.body.style.cursor = 'wait';
 }
  
   




</script>
       </section>
