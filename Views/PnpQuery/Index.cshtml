
@using QueryTool
@using System.Collections


 @model IndexViewModel;

  <link href="https://cdn.jsdelivr.net/npm/&#64;mdi/font&#64;4.x/css/materialdesignicons.min.css" rel="stylesheet">

@{
    ViewData["Title"] = "Home Page";
    
  //  @Model.teste

   
   


        List<SelectListItem> listaAnos = PopulateAnosPNP(); 
          

}
             


      
<v-app id="app">
<div class="modal-overlay">
        
        <div class="modal">
          
            <div class="actions">
                <a onclick="Modal.close()" href="#">
                    <img  src="~/images/remove.svg" alt="Fechar">
                </a>
            </div>

          <div class="check-container">

            <div class = "img">
              <svg xmlns="http://www.w3.org/2000/svg" fill="#2ecc71" viewBox="0 0 24 24"><path d="M19.78,2.2L24,6.42L8.44,22L0,13.55L4.22,9.33L8.44,13.55L19.78,2.2M19.78,5L8.44,16.36L4.22,12.19L2.81,13.55L8.44,19.17L21.19,6.42L19.78,5Z" /></svg>
            </div>
             
          </div>

           <h2 id="titleIncece">CSV processado</h2>
            
            <div class="descriptions">
               @if(ViewBag.Arquivo !=null){

            Console.Write(ViewBag.Arquivo);
           
             <p>CSV Gerado com Sucesso!!! Total de Registros=@ViewBag.registros</p>
                
         }

            </div>

        </div>
    </div>    
    <v-container class="grid-container">
      <v-card elevation="0" class="text-start">
          <h2 class="titlepage">@ViewBag.Titulo</h2>  
          <h2 class="titlepage">Painel @ViewBag.subTitulo</h2>
          <p>CSV Gerado com Sucesso!!! Total de Registros=@ViewBag.registros</p>
        </v-card>
        <!--
          <form asp-page-handler="Index" onsubmit="Form.submit(event)" id="entradaDados" method="GET">
            -->
            <form asp-page-handler="Index"  method="GET">
  <h5 >Selecione os Anos da PNP</h5>

    <table style="tablecheckbox" >
    <tr>
      
        

        <tr>
        <td style="vertical-align:top"  WIDTH=50%>          
                                    @{
                                              
                                            int i=0;
                                            @foreach (var item in listaAnos){
                                                Console.Write("entre");
                                                Boolean chave =true;


                                               

                                                      for (int x=0;x<Model.Tabela.Ano.Length;x++){
                                                          if (Model.Tabela.Ano[x].Trim().Equals(@item.Value)){
                                                               <input id="A" type="checkbox" name="Ano" value="@item.Value" checked=true/>
                                                                @item.Text
                                                          chave=false;
                                                      
                                                      }
                                                      }

                                                    
                                                    if (chave){
                                                        <input id="A" type="checkbox" name="Ano" value="@item.Value" checked="@item.Selected"/>

                                                   
                                                      @item.Text

                                                    }

                                                   
                                                      
                                                      i++;
                                                        

                                                    
                                              }                                   
                                       }
                                        
                                        
                                    </div>

        </td>

        </tr>
        <tr>
        <td style="vertical-align:top"  WIDTH=50%>
           <p></p>
        </td>
        </tr>
        </table>
        <input type="hidden" id="fname" name="titulo" value="@ViewBag.Titulo;@ViewBag.subTitulo">
       
      
        <v-btn value="@ViewBag.query" color="#2ecc71" dark type="submit" name="query"  asp-page-handler="Submit">Processar</v-btn>
        
         <a href="@ViewBag.Arquivo" class="button download" download="pnp_academicosPNP.txt" target="_blank">
                Download CSV
              </a>
              <a href="@ViewBag.Dicionario" class="button download" download="dicionarioPNP.pdf" target="_blank">
                Download Dicionário de Dados
              </a> 
         <!--
         <button id="button1" type="submit"  class="btnd process" name="query" value=@ViewBag.query  asp-page-handler="Submit" >Processar CSV</button>
        -->
</form>
  
       <v-card style="width: 70%;" class="text-center">
          <h5 class="titlepage">Tabela com 100 Registros para Análise</h5>        
          
          <v-data-table
          style="z-index: 0;"
          :headers="headers"
          :items="desserts"
         
          :items-per-page="5"
          class="elevation-1"
        ></v-data-table>
                
      
        </v-card>
      

    </v-container>
</v-app>
      
    

<script src="https://cdn.jsdelivr.net/npm/vue@2.x/dist/vue.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.js"></script>


@{


      List<SelectListItem> PopulateAnosPNP()
    {
        List<SelectListItem> items = new List<SelectListItem>();
        AnosPNP anosPNP = new AnosPNP();

        
        foreach (var item in anosPNP.listaAnos)

        {
            //    dimensoes = dimensoes + "\'" + item.ToString().Trim().Replace("\'","")+"\',";

            items.Add(new SelectListItem
            {
                Text = item.ToString(),
                Value = item.ToString(),
                Selected = (item.ToString().Equals(AnosPNP.anocorrente)?true:false)
            });
        }


        //     itemsDimensao = items;
        //   Console.WriteLine(dimensoes);
        return items;
    }




   




   
}

<script>
function myFunction() {
  alert("I am an alert box!");
}
</script>

<script type="text/javascript" charset="utf-8">




  let app = new Vue({
      el: '#app',
       vuetify: new Vuetify({

          icons: {
        iconFont: "md",
    },
       }),
    
    
    
   data: {  
    teste :['dudu'],
    selectedDim :[],
    selectedFact: ['John'],
    array: [],
    headers: [
       
         @Html.Raw(Model.Tabela.colunas) 
 
        
        ],
        desserts: [
        
         @Html.Raw(Model.Tabela.linhas) 
        
        ]
   
   
   },
   methods: {
    greet: function (event) {

         $.ajax({
            type: "GET",
            url: "./Search",
            data:  $("#query").val(),
            dataType: "json",
            success: OnSuccess,
            failure: function (response) {
                alert(response.d);
            }
        });
     
     
    }
   
   }
  }
  )

    
function setHourglass()
 {
   document.body.style.cursor = 'wait';
 }
  
   




</script>
